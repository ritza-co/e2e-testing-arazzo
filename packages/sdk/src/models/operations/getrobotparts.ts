/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type GetRobotPartsRequest = {
  /**
   * Unique identifier of the robot. This ID is generated upon robot creation and is required for subsequent operations on the robot.
   *
   * @remarks
   */
  robotId: string;
};

/** @internal */
export const GetRobotPartsRequest$inboundSchema: z.ZodType<
  GetRobotPartsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  robotId: z.string(),
});

/** @internal */
export type GetRobotPartsRequest$Outbound = {
  robotId: string;
};

/** @internal */
export const GetRobotPartsRequest$outboundSchema: z.ZodType<
  GetRobotPartsRequest$Outbound,
  z.ZodTypeDef,
  GetRobotPartsRequest
> = z.object({
  robotId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRobotPartsRequest$ {
  /** @deprecated use `GetRobotPartsRequest$inboundSchema` instead. */
  export const inboundSchema = GetRobotPartsRequest$inboundSchema;
  /** @deprecated use `GetRobotPartsRequest$outboundSchema` instead. */
  export const outboundSchema = GetRobotPartsRequest$outboundSchema;
  /** @deprecated use `GetRobotPartsRequest$Outbound` instead. */
  export type Outbound = GetRobotPartsRequest$Outbound;
}

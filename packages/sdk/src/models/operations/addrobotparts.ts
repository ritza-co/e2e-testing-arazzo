/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type AddRobotPartsRequest = {
  /**
   * Unique identifier of the robot. This ID is generated upon robot creation and is required for subsequent operations on the robot.
   *
   * @remarks
   */
  robotId: string;
  addParts: components.AddParts;
};

/** @internal */
export const AddRobotPartsRequest$inboundSchema: z.ZodType<
  AddRobotPartsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  robotId: z.string(),
  AddParts: components.AddParts$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "AddParts": "addParts",
  });
});

/** @internal */
export type AddRobotPartsRequest$Outbound = {
  robotId: string;
  AddParts: components.AddParts$Outbound;
};

/** @internal */
export const AddRobotPartsRequest$outboundSchema: z.ZodType<
  AddRobotPartsRequest$Outbound,
  z.ZodTypeDef,
  AddRobotPartsRequest
> = z.object({
  robotId: z.string(),
  addParts: components.AddParts$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    addParts: "AddParts",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddRobotPartsRequest$ {
  /** @deprecated use `AddRobotPartsRequest$inboundSchema` instead. */
  export const inboundSchema = AddRobotPartsRequest$inboundSchema;
  /** @deprecated use `AddRobotPartsRequest$outboundSchema` instead. */
  export const outboundSchema = AddRobotPartsRequest$outboundSchema;
  /** @deprecated use `AddRobotPartsRequest$Outbound` instead. */
  export type Outbound = AddRobotPartsRequest$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The type of part.
 */
export const PartInputType = {
  Arm: "arm",
  Leg: "leg",
  Sensor: "sensor",
  Processor: "processor",
  Mobility: "mobility",
  PowerSource: "power_source",
} as const;
/**
 * The type of part.
 */
export type PartInputType = ClosedEnum<typeof PartInputType>;

export type PartInput = {
  /**
   * The type of part.
   */
  type: PartInputType;
  /**
   * The name of the part.
   */
  name: string;
  /**
   * Quantity of the part.
   */
  quantity: number;
};

/** @internal */
export const PartInputType$inboundSchema: z.ZodNativeEnum<
  typeof PartInputType
> = z.nativeEnum(PartInputType);

/** @internal */
export const PartInputType$outboundSchema: z.ZodNativeEnum<
  typeof PartInputType
> = PartInputType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PartInputType$ {
  /** @deprecated use `PartInputType$inboundSchema` instead. */
  export const inboundSchema = PartInputType$inboundSchema;
  /** @deprecated use `PartInputType$outboundSchema` instead. */
  export const outboundSchema = PartInputType$outboundSchema;
}

/** @internal */
export const PartInput$inboundSchema: z.ZodType<
  PartInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PartInputType$inboundSchema,
  name: z.string(),
  quantity: z.number().int(),
});

/** @internal */
export type PartInput$Outbound = {
  type: string;
  name: string;
  quantity: number;
};

/** @internal */
export const PartInput$outboundSchema: z.ZodType<
  PartInput$Outbound,
  z.ZodTypeDef,
  PartInput
> = z.object({
  type: PartInputType$outboundSchema,
  name: z.string(),
  quantity: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PartInput$ {
  /** @deprecated use `PartInput$inboundSchema` instead. */
  export const inboundSchema = PartInput$inboundSchema;
  /** @deprecated use `PartInput$outboundSchema` instead. */
  export const outboundSchema = PartInput$outboundSchema;
  /** @deprecated use `PartInput$Outbound` instead. */
  export type Outbound = PartInput$Outbound;
}

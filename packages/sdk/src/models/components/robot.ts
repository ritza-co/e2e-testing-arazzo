/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  Link,
  Link$inboundSchema,
  Link$Outbound,
  Link$outboundSchema,
} from "./link.js";

/**
 * The base model type of the robot.
 */
export const Model = {
  Android: "android",
  Humanoid: "humanoid",
  Rover: "rover",
} as const;
/**
 * The base model type of the robot.
 */
export type Model = ClosedEnum<typeof Model>;

/**
 * Current status of the robot.
 */
export const Status = {
  Designing: "designing",
  Assembled: "assembled",
  Active: "active",
} as const;
/**
 * Current status of the robot.
 */
export type Status = ClosedEnum<typeof Status>;

export type Robot = {
  /**
   * Unique identifier of the robot.
   */
  robotId: string;
  /**
   * The name of the robot.
   */
  name: string;
  /**
   * The base model type of the robot.
   */
  model: Model;
  /**
   * Current status of the robot.
   */
  status: Status;
  /**
   * Hypermedia links to related resources.
   */
  links: Array<Link>;
};

/** @internal */
export const Model$inboundSchema: z.ZodNativeEnum<typeof Model> = z.nativeEnum(
  Model,
);

/** @internal */
export const Model$outboundSchema: z.ZodNativeEnum<typeof Model> =
  Model$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Model$ {
  /** @deprecated use `Model$inboundSchema` instead. */
  export const inboundSchema = Model$inboundSchema;
  /** @deprecated use `Model$outboundSchema` instead. */
  export const outboundSchema = Model$outboundSchema;
}

/** @internal */
export const Status$inboundSchema: z.ZodNativeEnum<typeof Status> = z
  .nativeEnum(Status);

/** @internal */
export const Status$outboundSchema: z.ZodNativeEnum<typeof Status> =
  Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Status$ {
  /** @deprecated use `Status$inboundSchema` instead. */
  export const inboundSchema = Status$inboundSchema;
  /** @deprecated use `Status$outboundSchema` instead. */
  export const outboundSchema = Status$outboundSchema;
}

/** @internal */
export const Robot$inboundSchema: z.ZodType<Robot, z.ZodTypeDef, unknown> = z
  .object({
    robotId: z.string(),
    name: z.string(),
    model: Model$inboundSchema,
    status: Status$inboundSchema,
    links: z.array(Link$inboundSchema),
  });

/** @internal */
export type Robot$Outbound = {
  robotId: string;
  name: string;
  model: string;
  status: string;
  links: Array<Link$Outbound>;
};

/** @internal */
export const Robot$outboundSchema: z.ZodType<
  Robot$Outbound,
  z.ZodTypeDef,
  Robot
> = z.object({
  robotId: z.string(),
  name: z.string(),
  model: Model$outboundSchema,
  status: Status$outboundSchema,
  links: z.array(Link$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Robot$ {
  /** @deprecated use `Robot$inboundSchema` instead. */
  export const inboundSchema = Robot$inboundSchema;
  /** @deprecated use `Robot$outboundSchema` instead. */
  export const outboundSchema = Robot$outboundSchema;
  /** @deprecated use `Robot$Outbound` instead. */
  export type Outbound = Robot$Outbound;
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { robotsCreateRobot } from "../funcs/robotsCreateRobot.js";
import { robotsGetRobot } from "../funcs/robotsGetRobot.js";
import { robotsListRobots } from "../funcs/robotsListRobots.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Robots extends ClientSDK {
  /**
   * List all robots
   *
   * @remarks
   * Retrieves a list of all robots. Supports pagination through query parameters.
   */
  async listRobots(
    request: operations.ListRobotsRequest,
    options?: RequestOptions,
  ): Promise<PageIterator<operations.ListRobotsResponse>> {
    return unwrapResultIterator(robotsListRobots(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a new robot design session
   *
   * @remarks
   * Initiates a new robot design by selecting a base model.
   */
  async createRobot(
    request: components.NewRobot,
    options?: RequestOptions,
  ): Promise<components.Robot> {
    return unwrapAsync(robotsCreateRobot(
      this,
      request,
      options,
    ));
  }

  /**
   * Get robot details
   *
   * @remarks
   * Retrieves detailed information about a specific robot by its unique identifier.
   */
  async getRobot(
    request: operations.GetRobotRequest,
    options?: RequestOptions,
  ): Promise<components.Robot> {
    return unwrapAsync(robotsGetRobot(
      this,
      request,
      options,
    ));
  }
}

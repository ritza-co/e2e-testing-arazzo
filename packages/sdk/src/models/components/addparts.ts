/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  PartInput,
  PartInput$inboundSchema,
  PartInput$Outbound,
  PartInput$outboundSchema,
} from "./partinput.js";

export type AddParts = {
  parts: Array<PartInput>;
};

/** @internal */
export const AddParts$inboundSchema: z.ZodType<
  AddParts,
  z.ZodTypeDef,
  unknown
> = z.object({
  parts: z.array(PartInput$inboundSchema),
});

/** @internal */
export type AddParts$Outbound = {
  parts: Array<PartInput$Outbound>;
};

/** @internal */
export const AddParts$outboundSchema: z.ZodType<
  AddParts$Outbound,
  z.ZodTypeDef,
  AddParts
> = z.object({
  parts: z.array(PartInput$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddParts$ {
  /** @deprecated use `AddParts$inboundSchema` instead. */
  export const inboundSchema = AddParts$inboundSchema;
  /** @deprecated use `AddParts$outboundSchema` instead. */
  export const outboundSchema = AddParts$outboundSchema;
  /** @deprecated use `AddParts$Outbound` instead. */
  export type Outbound = AddParts$Outbound;
}
